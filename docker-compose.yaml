version: '3.8' # Specify the Compose file format version
 
services:
  myapp: # Name of the service
     build: . # Use the current directory to build the image
     image: go-tutorial:latest # Tag the built image
     container_name: my-go-tutorial # Name the container

  db: # PostgreSQL database service
     image: postgres:13 # Use the official PostgreSQL image
     container_name: go-lang-db # Name the database container
     environment:
       POSTGRES_USER: postgres
       POSTGRES_PASSWORD: root@123
       POSTGRES_DB: go-lang
     ports:
       - "5432:5432" # Expose PostgreSQL on port 5432
     volumes:
       - postgres_data:/var/lib/postgresql/data
     networks:
       - go-postgres-network
     healthcheck:
       test: ["CMD-SHELL", "pg_isready -U postgres -d go-lang"] # Check if PostgreSQL is ready
       interval: 10s # Run the check every 10 seconds
       timeout: 5s # Wait 5 seconds for the test to succeed
       retries: 5 # Consider the container healthy after 5 retries
 
     # To run this docker-compose file, use the following command:
     # docker-compose up
 # Define volumes for PostgreSQL persistence
volumes:
  postgres_data:

  # This command will build the Docker image (if it doesn't already exist) and start the container.
  # You can stop the container with:
  # docker-compose down
# Define the network for communication between services
networks:
  go-postgres-network:
    driver: bridge